# builtin modules https://docs.ansible.com/ansible/latest/collections/ansible/builtin/index.html
---
- hosts: qtrees_server
  vars_files:
    - "{{ inventory_dir }}/variables.yml"
  become: true
  tasks:
  - name: Run update
    apt:
      update_cache: true
  - name: Upgrade all packages
    apt: 
      name: "*"
      state: latest
  - name: Update qtrees-ai-data repo
    become_user: ubuntu
    shell: |
      cd /home/ubuntu/qtrees-ai-data
      git checkout {{ lookup('ansible.builtin.env', 'GIT_BRANCH') }}
      git pull origin {{ lookup('ansible.builtin.env', 'GIT_BRANCH') }}
#  - name: Update dependencies of qtrees
#    become_user: ubuntu
#    shell: |
#      miniconda3/bin/conda update conda -y
#      miniconda3/bin/conda env update --file qtrees-ai-data/requirements.yaml --prune
#    ignore_errors: true
  - name: stop postgrest docker
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      docker-compose -f qtrees-ai-data/infrastructure/database/docker-compose.yml down
  - name: delete database
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      PGPASSWORD=${POSTGRES_PASSWD} psql --host $DB_QTREES -U postgres -c "DROP DATABASE qtrees WITH (FORCE);"
      PGPASSWORD=${POSTGRES_PASSWD} psql --host $DB_QTREES -U postgres -c "DROP DATABASE lab_gis;"
      PGPASSWORD=${POSTGRES_PASSWD} psql --host $DB_QTREES -U postgres -c "DROP ROLE gis_admin, ui_user, ai_user, authenticator, web_anon, qtrees_admin, qtrees_user;"
    ignore_errors: true
  - name: setup database
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      cd qtrees-ai-data/infrastructure/database
      . /home/ubuntu/qtrees-ai-data/infrastructure/database/init_db.sh
  - name: s3 sync
    become_user: ubuntu
    shell: |
      aws s3 sync s3://qtrees-data ~/qtrees-ai-data/data --no-progress --exclude 'img/*' --exclude '.*'
#  - name: restore database
#    become_user: ubuntu
#    shell: |
#      . /home/ubuntu/setup_environment.sh
#      cd qtrees-ai-data
#      export QTREES_BACKUP_DIR=/home/ubuntu/qtrees-ai-data/data/db
#      . /home/ubuntu/qtrees-ai-data/data/db
#    ignore_errors: true
  - name: fill database (static data)
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      cd qtrees-ai-data
      export PYTHONPATH=/home/ubuntu/qtrees-ai-data
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_trees_in_db.py >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_soil_in_db.py >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_shading_index_in_db.py --shadow_index_file=data/shading/berlin_shadow_box_220323.csv >> /home/ubuntu/download-cron.log 2>&1
    # python logs can be found on host at 'tail -fn +1 qtrees/qtrees_log'
  - name: fill database (dynamic data)
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      cd qtrees-ai-data
      export PYTHONPATH=/home/ubuntu/qtrees-ai-data
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_wheather_observations.py >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_radolan_in_db.py >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_gdk_watering_in_db.py >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_solaranywhere_weather_in_db.py --days=450 >> /home/ubuntu/download-cron.log 2>&1
      /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python scripts/script_store_solaranywhere_forecast_in_db.py >> /home/ubuntu/download-cron.log 2>&1
  - name: Backup database
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      cd qtrees-ai-data
      . /home/ubuntu/qtrees-ai-data/scripts/script_backup_db_data.sh /home/ubuntu/qtrees-ai-data/data/db
    ignore_errors: true
  - name: launch postgrest docker
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      docker-compose -f qtrees-ai-data/infrastructure/database/docker-compose.yml up -d
  - name: copy download-crontab
    copy:
      src: "../../../scheduling/download-crontab"
      dest: "/etc/cron.d/download-crontab"
  - name: setup cron
    shell: |
      chmod 0644 /etc/cron.d/download-crontab
      crontab -u ubuntu /etc/cron.d/download-crontab
  - name: Run integration tests
    become_user: ubuntu
    shell: |
      . /home/ubuntu/setup_environment.sh
      cd qtrees-ai-data
      export PYTHONPATH=/home/ubuntu/qtrees-ai-data
      URL_POSTGREST=http://localhost:3000 /home/ubuntu/miniconda3/envs/qtrees-ai-data/bin/python -m unittest discover -v tests/integration
